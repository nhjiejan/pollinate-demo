apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ template "chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      # initContainers:
      # - name: flask-migrate
      #   image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      #   command: ['bash', '-c', 'flask db init && flask db migrate && flask db upgrade']
      #   env:
      #     - name: POSTGRES_DB
      #       valueFrom:
      #         secretKeyRef:
      #           name: {{ template "fullname" . }}-secrets
      #           key: POSTGRES_DB
      #     - name: POSTGRES_USER
      #       valueFrom:
      #         secretKeyRef:
      #           name: {{ template "fullname" . }}-secrets
      #           key: POSTGRES_USER
      #     - name: POSTGRES_PASSWORD
      #       valueFrom:
      #         secretKeyRef:
      #           name: {{ template "fullname" . }}-secrets
      #           key: POSTGRES_PASSWORD
      #     - name: POSTGRES_URL
      #       valueFrom:
      #         secretKeyRef:
      #           name: {{ template "fullname" . }}-secrets
      #           key: POSTGRES_URL
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}-secrets
                key: POSTGRES_DB
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}-secrets
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}-secrets
                key: POSTGRES_PASSWORD
          - name: POSTGRES_URL
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}-secrets
                key: POSTGRES_URL
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
